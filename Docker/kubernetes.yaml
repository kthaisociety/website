apiVersion: v1
kind: Service
metadata:
  name: kthais-interface
  labels:
    app: rep
spec:
  clusterIP: None
  selector:
    app: www
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      name: server-port
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: staticfiles
  labels:
    type: local
    app: staticfiles
spec:
  storageClassName: website-staticfiles
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/staticfiles"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: website-staticfiles-pv
  labels:
    app: staticfiles
spec:
  storageClassName: website-staticfiles
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: database
  labels:
    type: local
    app: postgres
spec:
  storageClassName: website-database
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/database"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: website-database-pv
  labels:
    app: postgres
spec:
  storageClassName: website-database
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kthais-server
  labels:
    app: rep
spec:
  replicas: 3
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
        - name: kthais-website
          image: ghcr.io/kthaisociety/website:latest
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: staticfiles
              mountPath: /website/staticfile
          env:
            - name: TYPE
              value: "beta"
      volumes:
        - name: staticfiles
          persistentVolumeClaim:
            claimName: website-staticfiles-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.1
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: website-database-pv
