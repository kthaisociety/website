apiVersion: v1
kind: Service
metadata:
  name: kthais-interface
  labels:
    app: rep
spec:
  selector:
    app: server
  ports:
    - protocol: TCP
      port: 80
      name: server-port
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: staticfiles
  labels:
    type: local
    app: staticfiles
spec:
  storageClassName: website-staticfiles
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/staticfiles"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: website-staticfiles-pv
  labels:
    app: staticfiles
spec:
  storageClassName: website-staticfiles
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: files
  labels:
    type: local
    app: files
spec:
  storageClassName: website-files
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/files"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: website-files-pv
  labels:
    app: files
spec:
  storageClassName: website-files
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: database
  labels:
    type: local
    app: postgres
spec:
  storageClassName: website-database
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/database"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: website-database-pv
  labels:
    app: postgres
spec:
  storageClassName: website-database
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kthais-server
  labels:
    app: server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
        - name: kthais-website
          image: ghcr.io/kthaisociety/website:latest
          imagePullPolicy: "Always"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: staticfiles
              mountPath: /website/staticfiles
            - name: files
              mountPath: /website/files
          env:
            - name: TYPE
              value: "feature/docker"
            - name: PROD_MODE
              value: "False"
            - name: PG_HOST
              value: postgres.default.svc.cluster.local
            - name: PG_PORT
              value: "5432"
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_USER
            - name: PG_PWD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_PASSWORD
            - name: PG_NAME
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_DB
      volumes:
        - name: staticfiles
          persistentVolumeClaim:
            claimName: website-staticfiles-pv
        - name: files
          persistentVolumeClaim:
            claimName: website-files-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.1
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_DB
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: website-database-pv
